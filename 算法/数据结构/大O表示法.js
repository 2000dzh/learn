// 大O表示法用于表示空间复杂度与时间复杂度(用来衡量算法时间长不长和占用内存多不多)

// 比方说,我们要衡量一个算法快不快,那么你的第一反应是通过运行时间来判断,但是同一段算法在老式奔腾处理器和
// 最新的i9-9700k处理器上,运行的时间肯定不同。所以我们就需要一个更精确的一点的表示方法,那就是大O表示法


// 大O表示法的时间复杂度大致可以分为以下几个级别
// 1.O(1): 常数级别,无论输入多大,它执行的步数都是恒定的。哈希表和数组都是这个级别的
// 2.O(N): 线性级别,随着输入变大耗费的步数也正向相关。遍历算法就是这个级别

// 根据时间复杂度由快到慢排序
// 常数时间 O(1)
// 对数时间 O(logn)
// 线性时间 O(n)
// 线性对数时间 O(nlogn)
// 二次时间 O(n^2)
// 三次时间 O(n^3)
// 指数时间 O(2^n)