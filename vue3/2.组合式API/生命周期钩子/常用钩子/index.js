onBeforeMount()
// 注册一个钩子，在组件被挂载之前被调用
// 当这个钩子被调用时，组件已经完成了其响应式状态的设置，但还没有创建 DOM 节点。

onMounted()
// 注册一个回调函数,在组件挂载完成后执行。
// 组件在以下情况下被视为已挂载
// 1.所有同步子组件已经挂载(不包含异步组件或<Suspense> 树内的组件)
// 2.其自身的 DOM 树已经创建完成并插入了父容器中。注意仅当根容器在文档中时，才可以保证组件 DOM 树也在文档中。

onBeforeUpdate()
// 注册一个钩子，在组件即将因为响应式状态变更而更新其 DOM 树之前调用。
// 这个钩子可以用来在 Vue 更新 DOM 之前访问 DOM 状态。在这个钩子中更改状态也是安全的。

onUpdated()
// 注册一个回调函数,在组件因为响应式状态变更而更新其DOM树之后调用。
// 父组件的更新钩子是在其子组件的更新钩子之后调用。
// 这个钩子会在组件任意 DOM 更新后被调用,如果你需要在特定的状态更改后访问更新后的DOM请使用 nextTick()
// 不要在 updated 钩子中更改组件的状态，这可能会导致无限的更新循环！

onBeforeUnmount()
// 注册一个钩子，在组件实例被卸载之前调用
// 当这个钩子被调用时，组件实例依然还保有全部的功能。

onUnmounted()
// 注册一个回调函数，在组件实例被卸载之后调用。
// 一个组件在以下情况下被视为已卸载
// 1.其所有子组件都已经被卸载
// 2.所有相关的响应式作用 (渲染作用以及 setup() 时创建的计算属性和侦听器) 都已经停止。
// 可以在这个钩子中手动清理一些副作用，例如计时器、DOM 事件监听器或者与服务器的连接

onActivated()
// 注册一个回调函数,若组件实例是 <KeepAlive> 缓存树的一部分，当组件被插入到 DOM 中时调用。

onDeactivated()
// 注册一个回调函数，若组件实例是 <KeepAlive> 缓存树的一部分，当组件从 DOM 中被移除时调用。
